@model TMApp.Models.ScheduleSet
@{
    ViewBag.Title = "ScheduleSet";
    Layout = "~/Views/Shared/_UserLayout.cshtml";
}
<link href="~/Content/bootstrap-datepicker.css" rel="stylesheet" />
@*<a href="~/Content/bootstrap-datepicker.standalone.css.map" />*@
<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />    
@section scripts{
    <script src="~/Scripts/jquery-3.5.1.min.js"></script>
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>

    <script src="~/js/MyScript.js"></script>
    <script>
         //$(document).off('.datepicker.data-api');
        $(".datepicker").on("focus",function () {
            $(".datepicker").val("");
        });
        $('.datepicker').datepicker({
             format: 'mm/dd/yyyy',
            startDate: '-3d',
            changeMonth: true,
            changeYear: true,
              leftArrow: '<i class="fa fa-long-arrow-left"></i>',
            rightArrow: '<i class="fa fa-long-arrow-right"></i>',
            minDate: new Date()
        });
        
      
    </script>
}




<section class="pricing_area area-padding-top">
    <div class="container">
        <div class="row">
            <div class="col-12">
                <div class="area-heading">
                    @using (Html.BeginForm("ScheduleSet", "ScheduleSet", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken();


                        <div class="form-group row">
                            @Html.LabelFor(model => model.Description, new { @class = "col-sm-2 col-form-label" })

                            <div class="col-sm-10">
                                @Html.TextBoxFor(model => model.Description, new { @class = "form-control", @placeholder = "Task Description", @type = "text", @required = "required", id = "txtDescription" })
                                <p style="color:red"> @Html.ValidationMessageFor(model => model.Description)</p>
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.Categories, new { @class = "col-sm-2 col-form-label" })
                            <div class="col-sm-10">
                                @Html.DropDownListFor(model => model.Categories,
                                       new SelectList(Enum.GetValues(typeof(TMApp.Models.TaskCategory))), "Select Task Category",
                                              new { @class = "form-control" })
                                <p style="color:red"> @Html.ValidationMessageFor(model => model.Categories)</p>
                            </div>
                        </div>

                        <div class="form-group row">

                            @Html.LabelFor(model => model.Date, new { @class = "col-sm-2 col-form-label" })

                            <div class="col-sm-10">
                             
                                @Html.TextBoxFor(model => model.Date, new { @class="datepicker", @placeholder = "Task date", @type = "text", @required = "required" })
                                <p style="color:red"> @Html.ValidationMessageFor(model => model.Date)</p>
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.Location, new { @class = "col-sm-2 col-form-label" })

                            <div class="col-sm-10">
                                @Html.TextBoxFor(model => model.Location, new { @class = "form-control", @placeholder = "Location", @type = "text", @required = "required", id = "txtLocation" })
                                <p style="color:red"> @Html.ValidationMessageFor(model => model.Location)</p>
                            </div>
                        </div>
                        <div class="form-group row">
                            @Html.LabelFor(model => model.Email, new { @class = "col-sm-2 col-form-label" })

                            <div class="col-sm-10">
                                @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @placeholder = "Email", @type = "email", @required = "required", id = "txtEmail" })
                                <p style="color:red"> @Html.ValidationMessageFor(model => model.Email)</p>
                            </div>
                        </div>

                        @*<div class="form-group row">
                            @Html.LabelFor(model => model.Username, new { @class = "col-sm-2 col-form-label" })

                            <div class="col-sm-10">
                                @Html.TextBoxFor(model => model.Username, new { @class = "form-control", @placeholder = "Username", @type = "text", @required = "required", id = "txtUsername" })
                                <p style="color:red"> @Html.ValidationMessageFor(model => model.Username)</p>
                            </div>
                        </div>

                        <div class="form-group row">
                            @Html.LabelFor(model => model.Password, new { @class = "col-sm-2 col-form-label" })

                            <div class="col-sm-10">
                                @Html.TextBoxFor(model => model.Password, new { @class = "form-control", @placeholder = "Password", @type = "password", @required = "required", id = "txtPwd" })
                                <p style="color:red"> @Html.ValidationMessageFor(model => model.Password)</p>
                            </div>
                        </div>*@

                        
                        <div class="form-check" style="padding-left:200px">
                            <button @("ScheduleSet") type="submit" id="Set" style="background-color:lightskyblue; border-radius:5px;width:80px;height:40px;font-size:large ;padding:5px,5px,5px,5px;font-size:large">Submit</button>
                            <button type="reset" id="TaskCancel" style="background-color:lightskyblue; border-radius:5px;width:80px;height:40px;font-size:large ;padding:5px,5px,5px,5px;font-size:large">Cancel</button>
                            @Html.Raw(TempData["Msg"])
                            @Html.Raw(TempData["Errormsg"])
                        </div>

                    }



                </div>
            </div>
        </div>
    </div>
</section>


