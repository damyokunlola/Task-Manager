@model TMApp.Models.ScheduleSet
@{
    ViewBag.Title = "ScheduleSet";
     Layout = "~/Views/Shared/_UserLayout.cshtml";
}
<br /><br />

<div style="height:600px; width:1000px;border-radius:10px;padding-top:20px;padding-left:50px;background-color:ghostwhite;position:center">
    <h3 class="bg-transparent" style="color:#000000;text-align:center;padding-top:5px">Set Task</h3>
    <div class="form-control-file" style="padding-left:30px;padding-right:30px;color:black">
        @using (Html.BeginForm("ScheduleSet", "ScheduleSet", FormMethod.Post))
        {
            @Html.AntiForgeryToken();

            <div class="form-group row">
                @Html.LabelFor(model => model.Description, new { @class = "col-sm-2 col-form-label" })

                <div class="col-sm-10">
                    @Html.TextBoxFor(model => model.Description, new { @class = "form-control", @placeholder = "Task Description", @type = "text", @required = "required", id = "txtName" })
                    <p style="color:red"> @Html.ValidationMessageFor(model => model.Description)</p>
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Categories, new { @class = "col-sm-2 col-form-label" })
                <div class="col-sm-10">
                    @Html.DropDownListFor(model => model.Categories,
                           new SelectList(Enum.GetValues(typeof(TMApp.Models.TaskCategory))), "Select Task Category",
                                  new { @class = "form-control" })
                    <p style="color:red"> @Html.ValidationMessageFor(model => model.Categories)</p>
                </div>
            </div>

            <div class="form-group row">

                @Html.LabelFor(model => model.Date, new { @class = "col-sm-2 col-form-label" })

                <div class="col-sm-10">
                    @Html.TextBoxFor(model => model.Date, new { @class = "form-control", @placeholder = "Task date", @type = "text", @required = "required", id = "txtName" })
                    <p style="color:red"> @Html.ValidationMessageFor(model => model.Date)</p>
                </div>
            </div>
           
            <div class="form-group row">
                @Html.LabelFor(model => model.Location, new { @class = "col-sm-2 col-form-label" })

                <div class="col-sm-10">
                    @Html.TextBoxFor(model => model.Location, new { @class = "form-control", @placeholder = "Task Description", @type = "text", @required = "required", id = "txtName" })
                    <p style="color:red"> @Html.ValidationMessageFor(model => model.Location)</p>
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(model => model.Email, new { @class = "col-sm-2 col-form-label" })

                <div class="col-sm-10">
                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @placeholder = "Task Description", @type = "email", @required = "required", id = "txtName" })
                    <p style="color:red"> @Html.ValidationMessageFor(model => model.Email)</p>
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Username, new { @class = "col-sm-2 col-form-label" })

                <div class="col-sm-10">
                    @Html.TextBoxFor(model => model.Username, new { @class = "form-control", @placeholder = "Task Description", @type = "text", @required = "required", id = "txtName" })
                    <p style="color:red"> @Html.ValidationMessageFor(model => model.Username)</p>
                </div>
            </div>

            <div class="form-group row">
                @Html.LabelFor(model => model.Password, new { @class = "col-sm-2 col-form-label" })

                <div class="col-sm-10">
                    @Html.TextBoxFor(model => model.Password, new { @class = "form-control", @placeholder = "Task Description", @type = "password", @required = "required", id = "txtName" })
                    <p style="color:red"> @Html.ValidationMessageFor(model => model.Password)</p>
                </div>
            </div>

            <br />
            <div class="form-check" style="padding-left:200px">
                <button @("ScheduleSet") type="submit" id="Set" style="background-color:lightskyblue; border-radius:5px;width:80px;height:40px;font-size:large ;padding:5px,5px,5px,5px;font-size:large">Submit</button>
                <button type="reset" id="Cancel" style="background-color:lightskyblue; border-radius:5px;width:80px;height:40px;font-size:large ;padding:5px,5px,5px,5px;font-size:large">Cancel</button>
                @Html.Raw(TempData["Msg"])
                @Html.Raw(TempData["Errormsg"])
            </div>




        }
    </div>

    </div>





